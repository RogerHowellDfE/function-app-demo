name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: function-app-demo

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    permissions: 
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Verify app builds, and that tests pass
      run: |
        dotnet restore
        dotnet build   --configuration Release --no-restore
        dotnet test    --configuration Release --no-restore
        dotnet publish --configuration Release --no-restore --output ./publish

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: function-app-demo
        path: ./publish

  build_and_push_image:
    runs-on: ubuntu-latest
    needs: build_and_test

    permissions: 
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push docker image
      uses: DFE-Digital/github-actions/build-docker-image@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy_to_dev:
    ## Temporarily disabled for testing in PR
    ## if: github.ref == 'refs/heads/main' 
    runs-on: ubuntu-latest
    needs: build_and_push_image

    environment: Development

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure (Dev)
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'fa-docker-demo-dev'
        images: '${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'

  deploy_to_test:
    runs-on: ubuntu-latest
    needs: deploy_to_dev
    if: startsWith(github.ref, 'refs/tags/')

    environment: Test

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure (Test)
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'fa-docker-demo-test'
        images: '${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}'

  deploy_to_prod:
    runs-on: ubuntu-latest
    needs: deploy_to_test
    if: startsWith(github.ref, 'refs/tags/')

    environment: Production

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure (Prod)
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'fa-docker-demo-prod'
        images: '${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}'

